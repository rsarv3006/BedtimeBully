Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"CMakeSettings\">\n    <configurations>\n      <configuration PROFILE_NAME=\"Debug\" ENABLED=\"true\" CONFIG_NAME=\"Debug\" />\n    </configurations>\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"e6f79806-8e73-4014-bba6-a9ecb06ab998\" name=\"Changes\" comment=\"date tick over\">\n      <change beforePath=\"$PROJECT_DIR$/.nvim/xcodebuild/app_logs.log\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.nvim/xcodebuild/app_logs.log\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.nvim/xcodebuild/original_logs.log\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.nvim/xcodebuild/original_logs.log\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.nvim/xcodebuild/settings.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.nvim/xcodebuild/settings.json\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.nvim/xcodebuild/xcodebuild.log\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.nvim/xcodebuild/xcodebuild.log\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/BedtimeBully.xcodeproj/project.pbxproj\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/BedtimeBully.xcodeproj/project.pbxproj\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/BedtimeBully.xcodeproj/xcuserdata/rjs.xcuserdatad/xcschemes/xcschememanagement.plist\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/BedtimeBully.xcodeproj/xcuserdata/rjs.xcuserdatad/xcschemes/xcschememanagement.plist\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/BedtimeBully/Sources/BedtimeScheduleScreen.swift\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/BedtimeBully/Sources/BedtimeScheduleScreen.swift\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/BedtimeBullyData/Tests/BedtimeBullyDataTests.swift\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/BedtimeBullyData/Tests/BedtimeBullyDataTests.swift\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/BedtimeBullyData/Tests/BedtimeDedupeTest.swift\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/BedtimeBullyData/Tests/BedtimeDedupeTest.swift\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"ClangdSettings\">\n    <option name=\"formatViaClangd\" value=\"false\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Swift Struct\" />\n        <option value=\"Swift Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 2\n}</component>\n  <component name=\"ProjectId\" id=\"2epcD9CGIVe1NVU3A0jrqEgybND\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;DefaultSwiftTemplate&quot;: &quot;Swift Class&quot;,\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.readMode.enableVisualFormatting&quot;: &quot;true&quot;,\n    &quot;Shell Script.Tuist Edit.executor&quot;: &quot;Run&quot;,\n    &quot;Shell Script.Tuist Generate.executor&quot;: &quot;Run&quot;,\n    &quot;Shell Script.Tuist Run.executor&quot;: &quot;Run&quot;,\n    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,\n    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\n    &quot;last_opened_file_path&quot;: &quot;/Users/rjs/dev/BedtimeBully/BedtimeBully/Sources&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.lookFeel&quot;,\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/BedtimeBully/Sources\" />\n      <recent name=\"$PROJECT_DIR$/BedtimeBullyData/Tests\" />\n      <recent name=\"$PROJECT_DIR$/BedtimeBullyData/Sources\" />\n      <recent name=\"$PROJECT_DIR$/Notifications/Sources\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/BedtimeBullyData/Sources\" />\n      <recent name=\"$PROJECT_DIR$/BedtimeBully/NotificationPermissions\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"Shell Script.Tuist Edit\">\n    <configuration name=\"Tuist Edit\" type=\"ShConfigurationType\">\n      <option name=\"SCRIPT_TEXT\" value=\"tuist edit\" />\n      <option name=\"INDEPENDENT_SCRIPT_PATH\" value=\"true\" />\n      <option name=\"SCRIPT_PATH\" value=\"\" />\n      <option name=\"SCRIPT_OPTIONS\" value=\"\" />\n      <option name=\"INDEPENDENT_SCRIPT_WORKING_DIRECTORY\" value=\"true\" />\n      <option name=\"SCRIPT_WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"INDEPENDENT_INTERPRETER_PATH\" value=\"true\" />\n      <option name=\"INTERPRETER_PATH\" value=\"/opt/homebrew/bin/fish\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"EXECUTE_IN_TERMINAL\" value=\"true\" />\n      <option name=\"EXECUTE_SCRIPT_FILE\" value=\"false\" />\n      <envs />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"Tuist Generate\" type=\"ShConfigurationType\">\n      <option name=\"SCRIPT_TEXT\" value=\"tuist generate\" />\n      <option name=\"INDEPENDENT_SCRIPT_PATH\" value=\"true\" />\n      <option name=\"SCRIPT_PATH\" value=\"\" />\n      <option name=\"SCRIPT_OPTIONS\" value=\"\" />\n      <option name=\"INDEPENDENT_SCRIPT_WORKING_DIRECTORY\" value=\"true\" />\n      <option name=\"SCRIPT_WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"INDEPENDENT_INTERPRETER_PATH\" value=\"true\" />\n      <option name=\"INTERPRETER_PATH\" value=\"/opt/homebrew/bin/fish\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"EXECUTE_IN_TERMINAL\" value=\"true\" />\n      <option name=\"EXECUTE_SCRIPT_FILE\" value=\"false\" />\n      <envs />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"Tuist Run\" type=\"ShConfigurationType\">\n      <option name=\"SCRIPT_TEXT\" value=\"tuist run BedtimeBully\" />\n      <option name=\"INDEPENDENT_SCRIPT_PATH\" value=\"true\" />\n      <option name=\"SCRIPT_PATH\" value=\"tuist run BedtimeBully\" />\n      <option name=\"SCRIPT_OPTIONS\" value=\"\" />\n      <option name=\"INDEPENDENT_SCRIPT_WORKING_DIRECTORY\" value=\"true\" />\n      <option name=\"SCRIPT_WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"INDEPENDENT_INTERPRETER_PATH\" value=\"true\" />\n      <option name=\"INTERPRETER_PATH\" value=\"/opt/homebrew/bin/fish\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"EXECUTE_IN_TERMINAL\" value=\"true\" />\n      <option name=\"EXECUTE_SCRIPT_FILE\" value=\"false\" />\n      <envs />\n      <method v=\"2\" />\n    </configuration>\n    <list>\n      <item itemvalue=\"Shell Script.Tuist Edit\" />\n      <item itemvalue=\"Shell Script.Tuist Generate\" />\n      <item itemvalue=\"Shell Script.Tuist Run\" />\n    </list>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"SwiftWorkspaceSettings\">\n    <option name=\"detectedToolchain\" value=\"true\" />\n    <option name=\"toolchainPathValue\" value=\"/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain\" />\n  </component>\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"e6f79806-8e73-4014-bba6-a9ecb06ab998\" name=\"Changes\" comment=\"\" />\n      <created>1712604837594</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1712604837594</updated>\n      <workItem from=\"1712604838649\" duration=\"179000\" />\n      <workItem from=\"1712605025936\" duration=\"272000\" />\n      <workItem from=\"1712779369333\" duration=\"2081000\" />\n      <workItem from=\"1712795265777\" duration=\"9982000\" />\n      <workItem from=\"1712956318945\" duration=\"8824000\" />\n      <workItem from=\"1713021245604\" duration=\"5606000\" />\n      <workItem from=\"1713062988926\" duration=\"3448000\" />\n      <workItem from=\"1713232699381\" duration=\"20980000\" />\n      <workItem from=\"1714443418236\" duration=\"2487000\" />\n      <workItem from=\"1714562183612\" duration=\"1101000\" />\n      <workItem from=\"1714853008022\" duration=\"199000\" />\n      <workItem from=\"1715079267824\" duration=\"29000\" />\n      <workItem from=\"1715092996985\" duration=\"102000\" />\n      <workItem from=\"1715093105817\" duration=\"1919000\" />\n      <workItem from=\"1715870940544\" duration=\"83000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"switch to tuist\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1712956344298</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1712956344298</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"2\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"switch to tuist\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"switch to tuist\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 9e428b4212c2abff683069e0931aed150df4dbe8)
+++ b/.idea/workspace.xml	(date 1718723449147)
@@ -9,17 +9,7 @@
     </configurations>
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="e6f79806-8e73-4014-bba6-a9ecb06ab998" name="Changes" comment="date tick over">
-      <change beforePath="$PROJECT_DIR$/.nvim/xcodebuild/app_logs.log" beforeDir="false" afterPath="$PROJECT_DIR$/.nvim/xcodebuild/app_logs.log" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.nvim/xcodebuild/original_logs.log" beforeDir="false" afterPath="$PROJECT_DIR$/.nvim/xcodebuild/original_logs.log" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.nvim/xcodebuild/settings.json" beforeDir="false" afterPath="$PROJECT_DIR$/.nvim/xcodebuild/settings.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.nvim/xcodebuild/xcodebuild.log" beforeDir="false" afterPath="$PROJECT_DIR$/.nvim/xcodebuild/xcodebuild.log" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/BedtimeBully.xcodeproj/project.pbxproj" beforeDir="false" afterPath="$PROJECT_DIR$/BedtimeBully.xcodeproj/project.pbxproj" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/BedtimeBully.xcodeproj/xcuserdata/rjs.xcuserdatad/xcschemes/xcschememanagement.plist" beforeDir="false" afterPath="$PROJECT_DIR$/BedtimeBully.xcodeproj/xcuserdata/rjs.xcuserdatad/xcschemes/xcschememanagement.plist" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/BedtimeBully/Sources/BedtimeScheduleScreen.swift" beforeDir="false" afterPath="$PROJECT_DIR$/BedtimeBully/Sources/BedtimeScheduleScreen.swift" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/BedtimeBullyData/Tests/BedtimeBullyDataTests.swift" beforeDir="false" afterPath="$PROJECT_DIR$/BedtimeBullyData/Tests/BedtimeBullyDataTests.swift" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/BedtimeBullyData/Tests/BedtimeDedupeTest.swift" beforeDir="false" afterPath="$PROJECT_DIR$/BedtimeBullyData/Tests/BedtimeDedupeTest.swift" afterDir="false" />
-    </list>
+    <list default="true" id="e6f79806-8e73-4014-bba6-a9ecb06ab998" name="Changes" comment="date tick over" />
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
Index: BedtimeBully/BedtimeBully.entitlements
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/BedtimeBully/BedtimeBully.entitlements b/BedtimeBully/BedtimeBully.entitlements
new file mode 100644
--- /dev/null	(date 1718827366992)
+++ b/BedtimeBully/BedtimeBully.entitlements	(date 1718827366992)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>com.apple.security.application-groups</key>
+	<array>
+		<string>group.rjs.app.dev.bedtimebully</string>
+	</array>
+</dict>
+</plist>
Index: BedtimeBullyData/Sources/CoreData/Model.xcdatamodeld/Model.xcdatamodel/contents
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/BedtimeBullyData/Sources/CoreData/Model.xcdatamodeld/Model.xcdatamodel/contents b/BedtimeBullyData/Sources/CoreData/Model.xcdatamodeld/Model.xcdatamodel/contents
new file mode 100644
--- /dev/null	(date 1718827747811)
+++ b/BedtimeBullyData/Sources/CoreData/Model.xcdatamodeld/Model.xcdatamodel/contents	(date 1718827747811)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
+<model type="com.apple.IDECoreDataModeler.DataModel" documentVersion="1.0" lastSavedToolsVersion="22758" systemVersion="23D60" minimumToolsVersion="Automatic" sourceLanguage="Swift" usedWithSwiftData="YES" userDefinedModelVersionIdentifier="">
+    <entity name="CDConfig" representedClassName="CDConfig" syncable="YES" codeGenerationType="class">
+        <attribute name="hasSetBedtime" optional="YES" attributeType="Boolean" usesScalarValueType="YES"/>
+        <attribute name="id" optional="YES" attributeType="String"/>
+        <attribute name="isNotificationsEnabled" optional="YES" attributeType="Boolean" usesScalarValueType="YES"/>
+    </entity>
+</model>
\ No newline at end of file
Index: BedtimeBullyData/Sources/BuildInitialData.swift
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import Foundation\nimport Notifications\nimport SwiftData\n\npublic func buildInitialData(_ modelContext: ModelContext) throws {\n    let schedulesFetchDescriptor: FetchDescriptor<NotificationSchedule> = FetchDescriptor()\n    let schedules = try modelContext.fetch(schedulesFetchDescriptor)\n    \n    if schedules.count == 0 {\n        let defaultSchedule = NotificationSchedule(name: \"Default\", notificationIntervals: [\n            TimeInterval(30 * 60),\n            TimeInterval(15 * 60),\n            TimeInterval(10 * 60),\n            TimeInterval(5 * 60),\n            TimeInterval(3 * 60),\n            TimeInterval(2 * 60),\n            TimeInterval(1 * 60),\n            TimeInterval(-1),\n        ], notificationMessages: [\n            \"Bedtime in 30 minutes\",\n            \"Bedtime in 15 minutes\",\n            \"Bedtime in 10 minutes\",\n            \"Bedtime in 5 minutes\",\n            \"Bedtime in 3 minutes\",\n            \"Bedtime in 2 minutes\",\n            \"Bedtime in 1 minute\",\n            \"Time for Bed!\",\n        ])\n        modelContext.insert(defaultSchedule)\n        \n        let defaultBedtime = try Time(hour: 21, minute: 45)\n        \n        let defaultBedtimeScheduleTemplate = BedtimeScheduleTemplate(\n            name: \"Default Bedtime Schedule\",\n            monday: defaultBedtime,\n            tuesday: defaultBedtime,\n            wednesday: defaultBedtime,\n            thursday: defaultBedtime,\n            friday: defaultBedtime,\n            saturday: defaultBedtime,\n            sunday: defaultBedtime,\n            notificationSchedule: defaultSchedule\n        )\n        \n        modelContext.insert(defaultBedtimeScheduleTemplate)\n        \n        let config = Config.createConfig()\n        modelContext.insert(config)\n    }\n}\n\npublic struct BedtimeDatesAndActiveSchedule {\n    let datesToCreate: [Date]\n    let activeSchedule: BedtimeScheduleTemplate\n}\n\npublic func getBedtimeDatesToCreate(_ modelContext: ModelContext, now: Date) throws -> BedtimeDatesAndActiveSchedule {\n    var datesToCreate: [Date] = []\n    let bedtimeScheduleTemplatesDescriptor: FetchDescriptor<BedtimeScheduleTemplate> = FetchDescriptor()\n    let scheduleTemplates = try modelContext.fetch(bedtimeScheduleTemplatesDescriptor)\n    \n    let activeScheduleTemplate = scheduleTemplates.first { $0.isActive == true }\n    \n    guard let activeScheduleTemplate else {\n        throw BedtimeError.noActiveScheduleTemplate\n    }\n    \n    let bedtimesFetchDescriptor: FetchDescriptor<Bedtime> = FetchDescriptor(\n        predicate: #Predicate { $0.status == \"active\" },\n        sortBy: [\n            .init(\\.id),\n        ]\n    )\n    let bedtimes = try modelContext.fetch(bedtimesFetchDescriptor)\n    \n    let calendar = Calendar.current\n    \n    for index in 0..<7 {\n        let dateSection = calendar.date(byAdding: .day, value: index, to: now)\n        let dayOfWeek = dateSection?.dayOfWeek\n        \n        let timeForBedtime = activeScheduleTemplate.getBedtime(dayOfWeek: dayOfWeek)\n        if let timeForBedtime, let dateSection {\n            let bedtimeDate = calendar.date(bySettingHour: timeForBedtime.hour, minute: timeForBedtime.minute, second: 0, of: dateSection)\n            \n            if let bedtimeDate, bedtimes.first(where: { $0.id == bedtimeDate.timeIntervalSince1970 }) == nil {\n                datesToCreate.append(bedtimeDate)\n            }\n        }\n    }\n    \n    return BedtimeDatesAndActiveSchedule(datesToCreate: datesToCreate, activeSchedule: activeScheduleTemplate)\n}\n\npublic func addBedtimesFromSchedule(_ modelContext: ModelContext) throws {\n    let now = Date()\n    let bedtimeDates = try getBedtimeDatesToCreate(modelContext, now: now)\n    \n    for bedtimeDate in bedtimeDates.datesToCreate {\n        try createBedtimeAndNotificationsforDate(modelContext: modelContext, bedtimeDate: bedtimeDate, notificationSchedule: bedtimeDates.activeSchedule.notificationSchedule)\n    }\n}\n\nfunc createBedtimeAndNotificationsforDate(modelContext: ModelContext, bedtimeDate: Date, notificationSchedule: NotificationSchedule?) throws {\n    guard let notificationSchedule else {\n        throw BedtimeError.notificationScheduleNotSetOnBedtime\n    }\n    let bedtime = try Bedtime(date: bedtimeDate, notificationSchedule: notificationSchedule)\n    \n    modelContext.insert(bedtime)\n}\n\npublic func addNotificationsForAllActiveBedtimes(modelContext: ModelContext) throws {\n    let bedtimesFetchDescriptor: FetchDescriptor<Bedtime> = FetchDescriptor(\n        predicate: #Predicate { $0.status == \"active\" },\n        sortBy: [\n            .init(\\.id),\n        ]\n    )\n    let bedtimes = try modelContext.fetch(bedtimesFetchDescriptor)\n    \n    for bedtime in bedtimes {\n        bedtime.notificationItems.forEach(\n        ) { notificationItem in\n            let date = Date(timeIntervalSince1970: notificationItem.id)\n            _ = NotificationService.scheduleNotification(id: notificationItem.idToString(), title: \"Bedtime Bully\", body: notificationItem.message, timestamp: date)\n        }\n    }\n}\n\npublic func removeAllBedtimesAndNotifications(modelContext: ModelContext) throws {\n    let bedtimesFetchDescriptor: FetchDescriptor<Bedtime> = FetchDescriptor()\n    let bedtimes = try modelContext.fetch(bedtimesFetchDescriptor)\n    \n    var notificationItems: [NotificationItem] = []\n    \n    for bedtime in bedtimes {\n        notificationItems.append(contentsOf: bedtime.notificationItems)\n        modelContext.delete(bedtime)\n    }\n    \n    let notificationItemIds = notificationItems.map { $0.idToString() }\n    \n    NotificationService.cancelNotifications(ids: notificationItemIds)\n}\n\npublic func removeBedtimesAndNotificationsInThePast(modelContext: ModelContext, currentDate date: Date) throws {\n    let bedtimesFetchDescriptor: FetchDescriptor<Bedtime> = FetchDescriptor(\n        predicate: #Predicate { $0.id < date.timeIntervalSince1970 }\n    )\n    let bedtimes = try modelContext.fetch(bedtimesFetchDescriptor)\n    \n    var notificationItems: [NotificationItem] = []\n    \n    for bedtime in bedtimes {\n        notificationItems.append(contentsOf: bedtime.notificationItems)\n        bedtime.status = BedtimeStatus.history.rawValue\n    }\n    \n    let notificationItemIds = notificationItems.map { $0.idToString() }\n    \n    NotificationService.cancelNotifications(ids: notificationItemIds)\n    try modelContext.save()\n}\n\npublic func wipeAllData(modelContext: ModelContext) throws {\n    let bedtimesFetchDescriptor: FetchDescriptor<Bedtime> = FetchDescriptor()\n    let bedtimes = try modelContext.fetch(bedtimesFetchDescriptor)\n    \n    var notificationItems: [NotificationItem] = []\n    \n    for bedtime in bedtimes {\n        notificationItems.append(contentsOf: bedtime.notificationItems)\n        modelContext.delete(bedtime)\n    }\n    \n    let notificationItemIds = notificationItems.map { $0.idToString() }\n    \n    NotificationService.cancelNotifications(ids: notificationItemIds)\n    \n    let schedulesFetchDescriptor: FetchDescriptor<NotificationSchedule> = FetchDescriptor()\n    let schedules = try modelContext.fetch(schedulesFetchDescriptor)\n    \n    for schedule in schedules {\n        modelContext.delete(schedule)\n    }\n    \n    let bedtimeScheduleTemplatesDescriptor: FetchDescriptor<BedtimeScheduleTemplate> = FetchDescriptor()\n    let scheduleTemplates = try modelContext.fetch(bedtimeScheduleTemplatesDescriptor)\n    \n    for scheduleTemplate in scheduleTemplates {\n        modelContext.delete(scheduleTemplate)\n    }\n}\n\npublic func updateBedtimeAndNotifications(modelContext: ModelContext, newBedtime: Date) throws {\n    let bedtimeTime = try newBedtime.getTime()\n    \n    let bedtimeSchedulesFetchDescriptor: FetchDescriptor<BedtimeScheduleTemplate> = FetchDescriptor(\n        predicate: BedtimeScheduleTemplate.activeBedtimeSchedulePredicate()\n    )\n    let bedtimeSchedules = try modelContext.fetch(bedtimeSchedulesFetchDescriptor)\n    \n    guard let bedtimeSchedule = bedtimeSchedules.first else { throw BedtimeError.noBedtimeSchedule }\n    \n    try removeAllBedtimesAndNotifications(modelContext: modelContext)\n    \n    try bedtimeSchedule.setBedtimes(modelContext: modelContext, monday: bedtimeTime, tuesday: bedtimeTime, wednesday: bedtimeTime, thursday: bedtimeTime, friday: bedtimeTime, saturday: bedtimeTime, sunday: bedtimeTime)\n    \n    try addBedtimesFromSchedule(modelContext)\n    \n    try addNotificationsForAllActiveBedtimes(modelContext: modelContext)\n}\n\npublic func updateNotificationsfromUpdatedBedtimeSchedule(modelContext: ModelContext, newBedtimeSchedule: BedtimeScheduleTemplate) throws {\n    try removeAllBedtimesAndNotifications(modelContext: modelContext)\n\n    try addBedtimesFromSchedule(modelContext)\n\n    try addNotificationsForAllActiveBedtimes(modelContext: modelContext)\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/BedtimeBullyData/Sources/BuildInitialData.swift b/BedtimeBullyData/Sources/BuildInitialData.swift
--- a/BedtimeBullyData/Sources/BuildInitialData.swift	(revision 9e428b4212c2abff683069e0931aed150df4dbe8)
+++ b/BedtimeBullyData/Sources/BuildInitialData.swift	(date 1718827992616)
@@ -1,8 +1,18 @@
 import Foundation
 import Notifications
+import CoreData
 import SwiftData
 
-public func buildInitialData(_ modelContext: ModelContext) throws {
+func createConfig(viewContext: NSManagedObjectContext) throws {
+    let request = CDConfig.fetchRequest()
+    let config = CDConfig(context: viewContext)
+    config.id = "config"
+    config.hasSetBedtime = false
+    config.isNotificationsEnabled = false
+    try viewContext.save()
+}
+
+public func buildInitialData(_ modelContext: ModelContext, moc: NSManagedObjectContext) throws {
     let schedulesFetchDescriptor: FetchDescriptor<NotificationSchedule> = FetchDescriptor()
     let schedules = try modelContext.fetch(schedulesFetchDescriptor)
     
@@ -44,6 +54,8 @@
         
         modelContext.insert(defaultBedtimeScheduleTemplate)
         
+        try createConfig(viewContext: moc)
+        
         let config = Config.createConfig()
         modelContext.insert(config)
     }
